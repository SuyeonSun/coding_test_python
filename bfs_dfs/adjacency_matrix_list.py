# 1. 인접 행렬
INF = 99999999 # 무한의 비용 선언

# 2차원 리스트를 이용해 인접 행렬 표현
graph = [
    [0, 7, 5],
    [7, 0, INF],
    [5, INF, 0]
]

print(graph)

# 2. 인접 리스트
# 행이 3개인 2차원 리스트로 인접 리스트 표현
graph = [[] for _ in range(3)]

# 노드 0에 연결된 노드 정보 저장(노드, 거리)
graph[0].append((1, 7))
graph[0].append((2, 5))

# 노드 1에 연결된 노드 정보 저장(노드, 거리)
graph[1].append((0, 7))

# 노드 2에 연결된 노드 정보 저장(노드, 거리)
graph[2].append((0, 5))

print(graph)

# 인접 행렬: 모든 관계를 저장하므로, 노드 개수가 많을수록 메모리가 불필요하게 낭비된다.
# 인접 리스트: 연결된 정보만을 사용하므로, 메모리를 효율적으로 사용한다. 하지만, 연결된 데이터를 하나씩 활용해야 하기 때문에 탐색 속도가 느리다.